name: Android App WOrkflow

on:
  pull_request:
    branches: [ main ]

jobs:

  build:
    name: 🔨 Build #
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          distribution: corretto
          java-version: 11

      # Allow permissions to make gradle executable - This can removed by adding the gradlew file permission
      # directly into the repository using `git update-index --chmod=+x gradlew`
      # - name: Make gradle executable
      #  run: chmod +x ./gradlew

      - name: Build with gradle
        run: ./gradlew build --stacktrace

#  lint-check:
#    name: 🔍 Linting
#    runs-on: ubuntu-latest
#    steps:
#
#      - name: Checkout code
#        uses: actions/checkout@v3
#
#      - name: Lint check
#        run: ./gradlew lint # Execute gradle script to perform lint check
#
#      - name: Generate lint report
#        uses: actions/upload-artifact@v2 # Uses upload-artifact@v2 action to upload lint report artifact
#        with: # Define extra parameters
#          name: lint_report.html # Name of the artifact to be uploaded
#          path: app/build/reports/lint-results-debug.html # Specifies the path where the artifact to be uploaded is located

  unit-tests:
    name: 🧪 Run Unit Tests
    needs: [ lint-check ]
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Execute unit tests
        run: ./gradlew test --stacktrace

      - name: Generate test report
        uses: actions/upload-artifact@v2
        with:
          name: unit_tests_report.html
          path: app/build/reports/tests/testDebugUnitTest/

  generate-apk:
    name: ⚙️Generate APK
    needs: [build, lint-check, unit-tests]
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: 11

      - name: Build debug apk
        run: ./gradlew assembleDebug --stacktrace

      - name: Upload debug apk
        uses: actions/upload-artifact@v2
        with:
          name: Android-CI-CD
          path: app/build/outputs/apk/debug/app-debug.apk

#  create-release:
#    name: 🎉 Create Release
#    needs: [ generate-apk ]
#    runs-on: ubuntu-latest
#    steps:
#
#      - name: Download APK from build
#        uses: actions/download-artifact@v1
#        with:
#          name: Android-CI-CD
#
#      - name: Create Release
#        id: create_release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: ${{ github.ref }}
#          release_name: Release ${{ github.ref }}

#      - name: Upload Release APK
#        id: upload_release_asset
#        uses: actions/upload-release-asset@v1.0.1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: Android-CI-CD/app-debug.apk
#          asset_name: Android-CI-CD.apk
#          asset_content_type: application/zip
#
#  firebase-deploy:
#    name: 📨 Deploy to Firebase App Distribution
#    needs: [ generate-apk ]
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout Code
#        uses: actions/checkout@v1
#
#      - name: Download APK from build
#        uses: actions/download-artifact@v1
#        with:
#          name: Android-CI-CD
#
#      - name: Upload Artifact to Firebase App Distribution
#        uses: wzieba/Firebase-Distribution-Github-Action@v1.2.2
#        with:
#          appId: ${{secrets.FIREBASE_APP_ID}}
#          token: ${{secrets.FIREBASE_TOKEN}}
#          groups: testers
#          file: Android-CI-CD/app-debug.apk
#
#  playstore-deploy:
#    name: 🚀 Deploy to Play Store
#    needs: [ generate-apk ]
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout Code
#        uses: actions/checkout@v1
#
#  send-message:
#    name: 📢 Send Message
#    needs: [ create-release, firebase-deploy, playstore-deploy ]
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout Code
#        uses: actions/checkout@v1